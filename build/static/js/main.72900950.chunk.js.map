{"version":3,"sources":["fire.js","components/Icons.js","components/Login.js","components/Header.js","components/Footer.js","components/TvShow.js","components/Home.js","components/Detail.js","components/Search.js","components/DramaCard.js","components/MyKdrama.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","library","add","faAngleDoubleRight","faSadTear","faUser","faLock","faHome","farFaTimesCircle","faTrashAlt","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","clearErrors","clearInputs","setLoginPopup","className","icon","size","onClick","e","preventDefault","type","placeholder","autoFocus","required","value","onChange","target","axios","require","default","Header","history","useHistory","useState","user","setUser","setEmailError","setPasswordError","loginPopup","getUserID","post","username","then","res","data","localStorage","setItem","userID","push","useEffect","auth","onAuthStateChanged","signOut","clear","window","scrollTo","isError","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","Footer","href","TvShow","result","reco","id","name","replace","src","poster_path","alt","first_air_date","vote_average","style","width","parseFloat","toFixed","Home","currPage","setCurrPage","tvShows","setTvShows","discover","pageNum","get","onlyKo","results","filter","x","original_language","isCurrPage","length","map","Detail","setData","recs","setRecs","noRecs","setNoRecs","watchedOption","setWatchedOption","watchlaterOption","setWatchlaterOption","loggedIn","setLoggedIn","getItem","existWatched","existWatchlater","location","showID","exist","original_name","genres","str","i","strGenre","number_of_seasons","number_of_episodes","overview","poster","backdrop_path","backgroundImage","Search","allShows","setAllShows","filteredShows","setFilteredShows","array","total_pages","input","toLowerCase","includes","slice","DramaCard","dramaID","fromWatched","isRemove","setIsRemove","watchedID","watchlaterID","remove","MyKdrama","watchedDramas","setWatchedDramas","laterDramas","setLaterDramas","App","sleep","setSleep","data-title","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72900950.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAOPofQdhnNr7m71shZHs9t4TPpwa5-A-8\",\n    authDomain: \"mykdrama-9be57.firebaseapp.com\",\n    projectId: \"mykdrama-9be57\",\n    storageBucket: \"mykdrama-9be57.appspot.com\",\n    messagingSenderId: \"586699840037\",\n    appId: \"1:586699840037:web:1138081ab56927c9f33dcc\",\n    measurementId: \"G-FB6SGSGKVK\"\n};\n\n// Initialize Firebase\nconst fire = firebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default fire;","import {library} from '@fortawesome/fontawesome-svg-core';\nimport {faAngleDoubleRight, faSadTear, faUser, faLock, faHome, faTrashAlt} from '@fortawesome/free-solid-svg-icons';\nimport { faTimesCircle as farFaTimesCircle } from '@fortawesome/free-regular-svg-icons'\n\nlibrary.add(faAngleDoubleRight, faSadTear, faUser, faLock, faHome, farFaTimesCircle, faTrashAlt);","import React from \"react\";\nimport \"./Icons.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../styles/Login.css'\n\nfunction Login(props) {\n\n    const {\n        email,\n        setEmail,\n        password,\n        setPassword,\n        handleLogin,\n        handleSignup,\n        hasAccount,\n        setHasAccount,\n        emailError,\n        passwordError,\n        clearErrors,\n        clearInputs,\n        setLoginPopup\n    } = props;\n\n    \n    return (\n        <div className=\"loginPopup\">\n            <FontAwesomeIcon icon={['far', 'times-circle']} size=\"4x\" className=\"exit\" onClick={e => {e.preventDefault(); setLoginPopup(false); clearErrors(); clearInputs();}} />\n\n            <div className=\"loginSection\">\n                <h2 className=\"loginTitle\">Login</h2>\n\n                <div className=\"bottomSpace\">\n                    <label className=\"loginLabel\">Username</label>\n                    <div className=\"loginPassword\">\n                        <FontAwesomeIcon icon=\"user\" size=\"2x\" className=\"loginIcon\" />\n                        <input className=\"loginInput\" type=\"text\" placeholder=\"pseudo email address\" autoFocus required value={email} onChange={(e) => {setEmail(e.target.value)}} />\n                       \n                    </div>\n                    <p className=\"error\">{emailError}</p>\n                </div>\n\n                <label className=\"loginLabel\">Password</label>\n                <div className=\"loginPassword\">\n                    <FontAwesomeIcon icon=\"lock\" size=\"2x\" className=\"loginIcon\" />\n                    <input className=\"loginInput\" type=\"password\" placeholder=\"at least 6 characters\" required value={password} onChange={(e) => {setPassword(e.target.value)}} />\n                    \n                </div>\n                <p className=\"error\">{passwordError}</p>\n\n                <div>\n                    {hasAccount ? (\n                        <>\n                            <button className=\"signBtn\" onClick={handleLogin}>Sign In</button>\n                            <p className=\"loginMessage\">Don't have an account ? <span className=\"signLabel\" onClick={() => {setHasAccount(!hasAccount); clearErrors(); clearInputs();}}>Sign Up</span></p>\n                        </>\n                    ) : (\n                        <>\n                            <button className=\"signBtn\" onClick={handleSignup}>Sign Up</button>\n                            <p className=\"loginMessage\">Have an account ? <span className=\"signLabel\" onClick={() => {setHasAccount(!hasAccount); clearErrors(); clearInputs();}}>Sign In</span></p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\"; \nimport '../styles/Header.css'\nimport fire from '../fire';\nimport Login from './Login';\nimport \"./Icons.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nconst axios = require('axios').default;\n\nfunction Header() {\n\n    const history = useHistory();\n    \n    const [user, setUser] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [hasAccount, setHasAccount] = useState(false);\n\n    // for login popup\n    const [loginPopup, setLoginPopup] = useState(false);\n\n    const clearInputs = () => {\n        setEmail(\"\");\n        setPassword(\"\");\n    }\n\n    const clearErrors = () => {\n        setEmailError(\"\");\n        setPasswordError(\"\");\n    }\n\n    const handleLogin = () => {\n        clearErrors();\n        let isError = false;\n        fire\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(err => {\n                isError = true;\n                switch (err.code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/user-disabled\":\n                    case \"auth/user-not-found\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/wrong-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            }).then(() => {\n                // closes the popup if user successfully logs in\n                if (!isError) {\n                    setLoginPopup(false);\n                }\n                getUserID(email);\n            });\n    }\n\n    const handleSignup = () => {\n        clearErrors();\n        let isError = false;\n        fire\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .catch(err => {\n                isError = true;\n                switch (err.code) {\n                    case \"auth/email-already-in-use\":\n                    case \"auth/invalid-email\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/weak-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            }).then(() => {\n                // Only add new user to database if there are no errors with firebase.\n                if (!isError) {\n                    // When user successfully sign up, they will be added to database\n                    axios.post(\"https://mykdrama.herokuapp.com/addUser\", {\n                        username: email\n                    }).then(() => {\n                        setLoginPopup(false);\n                        getUserID(email);\n                    });\n                }\n            });\n    }\n\n    const handleLogout = () => {\n        fire.auth().signOut();\n        localStorage.clear();\n        history.push('/home');\n        window.scrollTo(0, 0);\n    }\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged(user => {\n            if (user) {\n                clearInputs();\n                setUser(user);\n            } else {\n                setUser(\"\");\n            }\n        });\n    } \n\n    // get user id based on email\n    // this is used if \"user\" has not been set yet\n    const getUserID = (email) => {\n        if (email && email !== \"\") {\n            axios.post('https://mykdrama.herokuapp.com/getUserID', {\n                username: email\n            }).then((res) => {\n                if (res.data[0]) {\n                    localStorage.setItem('userID', res.data[0].userID);\n                }\n                history.push('/home');\n            });\n        }\n    }\n\n    useEffect(() => {\n        authListener();\n    }, []);\n\n    useEffect(() => {\n        // when user sign in, the username will be used to get the user id, which will be stored in local storage\n        if (user && user !== \"\") {\n            axios.post('https://mykdrama.herokuapp.com/getUserID', {\n                username: user.email\n            }).then((res) => {\n                if (res.data[0]) {\n                    localStorage.setItem('userID', res.data[0].userID);\n                }\n            });\n        }\n    }, [user]);\n\n    \n\n\n\n    // let user know if api calls all used up\n\n    // add text to readme\n\n    return (\n        <div className=\"header\">\n            <ul>\n                <li onClick={e => {e.preventDefault(); history.push('/home');}}><FontAwesomeIcon icon=\"home\" size=\"2x\" className=\"homeIcon\" /></li>\n                <li onClick={e => {e.preventDefault(); history.push('/search');}}><p>Search</p></li>\n                <li onClick={e => {e.preventDefault(); history.push('/myKdrama');}}><p>myKdrama</p></li>             \n\n                {user ? (\n                    <li className=\"loginNav\" onClick={handleLogout}><p>Logout</p></li>\n                ) : (\n                    <li className=\"loginNav\" onClick={e => {e.preventDefault(); setLoginPopup(true);}}><p>Login</p></li>\n                )}\n\n                {loginPopup && (\n                    <Login \n                        email = {email}\n                        setEmail = {setEmail}\n                        password = {password}\n                        setPassword = {setPassword}\n                        handleLogin = {handleLogin}\n                        handleSignup = {handleSignup}\n                        hasAccount = {hasAccount}\n                        setHasAccount = {setHasAccount}\n                        emailError = {emailError}\n                        passwordError = {passwordError}\n                        clearErrors = {clearErrors}\n                        clearInputs = {clearInputs}\n                        setLoginPopup = {setLoginPopup}\n                    />\n                )}       \n            </ul>\n        </div>\n    );\n}\n\nexport default Header;","import React from \"react\";\nimport '../styles/Footer.css'\n\nfunction Footer() {\n\n    return (\n        <div className=\"footer\">\n            <p>Created by Danny Lin</p>\n            <p>K-drama data from The Movie Database API</p>\n            <p><a href=\"https://github.com/dl805387/myKdrama\" target=\"_blank\">Github</a></p>\n        </div>\n    );\n}\n\nexport default Footer;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\"; \nimport '../styles/TvShow.css'\n\nfunction TvShow(props) {\n\n    const history = useHistory();\n    const {result, reco} = props;\n\n    // convert rating to percent with a percent symbol at the end\n    const toPercent = () => {\n        return parseFloat((result.vote_average * 10).toFixed(2)) + \"%\";\n    }\n\n    // If the tv show is a recommendation, then it will have its own styling\n    const isRecoPic = () => {\n        if (reco) {\n            return \"recoPic\";\n        } else {\n            return \"showPic\";\n        }\n    }\n\n    // If the tv show is a recommendation, then it will not have \"click for more detail!\" text\n    const isRecoFooter = () => {\n        if (reco) {\n            return \"noFooter\";\n        } else {\n            return \"infoFooter\"\n        }\n    }\n\n    \n    return (\n        <div className=\"tvShow\" \n            onClick={() => {\n                localStorage.setItem('showID', result.id);\n                history.push('/detail/' + result.name.replace(/\\s/g, ''));\n            }}\n        >\n            <img className={isRecoPic()} src={\"https://image.tmdb.org/t/p/w500\" + result.poster_path} alt={result.name}></img>\n            \n            <div className=\"info\">\n                <p className=\"showTitle\">{result.name}</p>\n                <p className=\"infoBody\">First Air Date: {result.first_air_date}</p>\n                <p className=\"infoBody\">User Rating: {result.vote_average} /10</p>\n                    \n                <div className=\"starRatings\">\n                    <div className=\"starRatingsTop\" style={{width: toPercent()}}><span>★</span><span>★</span><span>★</span><span>★</span><span>★</span></div>\n                    <div className=\"starRatingsBottom\"><span>★</span><span>★</span><span>★</span><span>★</span><span>★</span></div>\n                </div>\n\n                <p className={isRecoFooter()}>Click for more detail!</p>\n            </div>\n        </div>\n    );\n}\n\nexport default TvShow;","import React, { useState, useEffect } from \"react\";\nimport TvShow from './TvShow';\nimport '../styles/Home.css'\nconst axios = require('axios').default;\n\nfunction Home() {\n\n    const apiKey = \"2c3c49c8f9892c1b17ebf32c4b74bed0\";\n    const [currPage, setCurrPage] = useState(1);\n    const [tvShows, setTvShows] = useState([]);\n\n    // Fetch API to get popular K dramas with page number\n    const discover = (pageNum) => {\n        axios.get(\"https://api.themoviedb.org/3/discover/tv?api_key=\" + apiKey + \"&language=en-US&sort_by=popularity.desc&page=\" + pageNum + \n        \"&with_genres=18&include_null_first_air_dates=false&with_original_language=ko&with_watch_monetization_types=flatrate\")\n        .then((res) => {\n            // Filter by korean language and must have poster picture\n            const onlyKo = res.data.results.filter(x=>{\n                return x.original_language === \"ko\" && x.poster_path !== null;\n            });\n            setTvShows(onlyKo);\n            setCurrPage(pageNum);\n        });\n    }\n\n    // Used to change the color of the page button if its the current page\n    const isCurrPage = (pageNum) => {\n        if (pageNum === currPage) {\n            return \"pageBtn currPage\";\n        } else {\n            return \"pageBtn\";\n        }\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        discover(1);\n    }, []);\n\n    // When user change page, the screen will be scrolled to the top\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [currPage]);\n\n    \n    return (\n        <div>\n            <div className=\"pagesSection forMobile\">\n                <button className={isCurrPage(1)} onClick={e => {e.preventDefault(); discover(1);}}>1</button>\n                <button className={isCurrPage(2)} onClick={e => {e.preventDefault(); discover(2);}}>2</button>\n                <button className={isCurrPage(3)} onClick={e => {e.preventDefault(); discover(3);}}>3</button>\n                <button className={isCurrPage(4)} onClick={e => {e.preventDefault(); discover(4);}}>4</button>\n                <button className={isCurrPage(5)} onClick={e => {e.preventDefault(); discover(5);}}>5</button>\n                <button className={isCurrPage(6) + \" btnEnd\"} onClick={e => {e.preventDefault(); discover(6);}}>6</button>\n                <button className={isCurrPage(7) + \" btnEnd\"} onClick={e => {e.preventDefault(); discover(7);}}>7</button>\n                <button className={isCurrPage(8) + \" btnEnd\"} onClick={e => {e.preventDefault(); discover(8);}}>8</button>\n                <button className={isCurrPage(9) + \" btnLast\"} onClick={e => {e.preventDefault(); discover(9);}}>9</button>\n            </div>\n\n            <div className=\"tvShows\">\n                {tvShows.length !== 0 && tvShows.map(x => {return <TvShow key={x.id} result={x} />})}\n            </div>\n\n            <div className=\"pagesSection\">\n                <button className={isCurrPage(1)} onClick={e => {e.preventDefault(); discover(1);}}>1</button>\n                <button className={isCurrPage(2)} onClick={e => {e.preventDefault(); discover(2);}}>2</button>\n                <button className={isCurrPage(3)} onClick={e => {e.preventDefault(); discover(3);}}>3</button>\n                <button className={isCurrPage(4)} onClick={e => {e.preventDefault(); discover(4);}}>4</button>\n                <button className={isCurrPage(5)} onClick={e => {e.preventDefault(); discover(5);}}>5</button>\n                <button className={isCurrPage(6) + \" btnEnd\"} onClick={e => {e.preventDefault(); discover(6);}}>6</button>\n                <button className={isCurrPage(7) + \" btnEnd\"} onClick={e => {e.preventDefault(); discover(7);}}>7</button>\n                <button className={isCurrPage(8) + \" btnEnd\"} onClick={e => {e.preventDefault(); discover(8);}}>8</button>\n                <button className={isCurrPage(9) + \" btnLast\"} onClick={e => {e.preventDefault(); discover(9);}}>9</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport '../styles/Detail.css'\nimport \"./Icons.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TvShow from './TvShow';\nconst axios = require('axios').default;\n\nfunction Detail(props) {\n\n    const [data, setData] = useState({});\n    const [recs, setRecs] = useState([]);\n    const [noRecs, setNoRecs] = useState(false);\n\n    // lets the user know if the show has already been added to watched/watch later\n    const [watchedOption, setWatchedOption] = useState(\"notValid\");\n    const [watchlaterOption, setWatchlaterOption] = useState(\"notValid\");\n    const [loggedIn, setLoggedIn] = useState(false);\n\n    // convert rating to percent with a percent symbol at the end\n    const toPercent = () => {\n        return parseFloat((data.vote_average * 10).toFixed(2)) + \"%\";\n    }\n\n    // If there are multiple genres, then this will combine them with a comma in between\n    const strGenre = () => {\n        if (!data.genres) {\n            return \"\";\n        }\n        let str = \"Genres: \";\n        for (let i = 0; i < data.genres.length; i++) {\n            if (i < data.genres.length - 1) {\n                str = str + data.genres[i].name + \", \";\n            } else {\n                str = str + data.genres[i].name;\n            }\n        }\n        return str;\n    }\n\n    useEffect(() => {\n        // If user is not logged in, then user won't be able to add show to watched/watch later\n        if (localStorage.getItem('userID') && localStorage.getItem('userID') !== \"0\") {\n            setLoggedIn(true);\n        }\n\n        window.scrollTo(0, 0);\n        // Fetch API to get details of the drama\n        axios.get(\"https://api.themoviedb.org/3/tv/\" + localStorage.getItem('showID') + \"?api_key=2c3c49c8f9892c1b17ebf32c4b74bed0&language=en-US\")\n        .then((res) => {\n            setData(res.data);\n            existWatched(res.data);\n            existWatchlater(res.data);\n        });\n\n        // Fetch API to get recommendations\n        axios.get(\"https://api.themoviedb.org/3/tv/\" + localStorage.getItem('showID') + \"/recommendations?api_key=2c3c49c8f9892c1b17ebf32c4b74bed0&language=en-US&page=1\")\n        .then((res) => {\n            // Filter the recommendations to only have korean shows\n            const onlyKo = res.data.results.filter(x=>{\n                return x.original_language === \"ko\" && x.poster_path !== null;\n            });\n            setRecs(onlyKo);\n            // Lets the user know if there are no recommendations\n            if (onlyKo.length === 0) {\n                setNoRecs(true);\n            }\n        });\n    }, [props.location]);\n\n\n    \n\n    // checks to see if the show already exists in watched\n    const existWatched = (data) => {\n        axios.post(\"https://mykdrama.herokuapp.com/existWatched\", {\n            userID: localStorage.getItem('userID'),\n            showID: data.id\n        }).then((res) => {\n            let exist;\n            // Grabs the value of the first property in the object, which is the value to determine if this exist in database\n            // If its 0, that means it doesnt exist in our database. But if its not 0, then it does exist in our database\n            for (var x in res.data[0]) {\n                exist = res.data[0][x];\n                break;\n            }\n            // only add to watched if show is not currently in watched\n            if (exist === 0) {\n                setWatchedOption(\"valid\");\n            }\n        });\n    }\n\n    // checks to see if the show already exists in watched\n    const existWatchlater = (data) => {\n        axios.post(\"https://mykdrama.herokuapp.com/existWatchlater\", {\n            userID: localStorage.getItem('userID'),\n            showID: data.id\n        }).then((res) => {\n            let exist;\n            for (var x in res.data[0]) {\n                exist = res.data[0][x];\n                break;\n            }\n            if (exist === 0) {\n                setWatchlaterOption(\"valid\");\n            }\n        });\n    }\n\n    // add show to watched in database\n    const addWatched = () => {\n        if (watchedOption === \"valid\") {\n            axios.post(\"https://mykdrama.herokuapp.com/addWatched\", {\n                userID: localStorage.getItem('userID'),\n                poster: data.poster_path,\n                name: data.name,\n                showID: data.id\n            }).then(() => {\n                setWatchedOption(\"notValid\");\n            });\n        }\n    }\n\n    // add show to watch later in database\n    const addWatchlater = () => {\n        if (watchlaterOption === \"valid\") {\n            axios.post(\"https://mykdrama.herokuapp.com/addWatchlater\", {\n                userID: localStorage.getItem('userID'),\n                poster: data.poster_path,\n                name: data.name,\n                showID: data.id\n            }).then(() => {\n                setWatchlaterOption(\"notValid\");\n            });\n        }\n    }\n\n\n    return ( \n        <div>\n        {data !== {} && (\n            <div className=\"detailPage\">\n                <div className=\"detailUpper\">\n                    <div className=\"detailBody\">\n                        <p className=\"detailTitle\">{data.name}</p>\n                        {data.poster_path && (<img className=\"poster\" src={\"https://image.tmdb.org/t/p/w200\" + data.poster_path} alt={data.name}></img>)}\n                        <p className=\"bodyText\">{data.original_name}</p>\n                        <p className=\"bodyText\">{data.first_air_date}</p>\n\n                        <div className=\"detailRating\">\n                            <p className=\"vote\">{data.vote_average}/10</p>\n                            <div className=\"starRatings\">\n                                <div className=\"starRatingsTop\" style={{width: toPercent()}}><span>★</span><span>★</span><span>★</span><span>★</span><span>★</span></div>\n                                <div className=\"starRatingsBottom\"><span>★</span><span>★</span><span>★</span><span>★</span><span>★</span></div>\n                            </div>\n                        </div>\n\n                        <p className=\"bodyText\">{strGenre()}</p>\n                        <p className=\"bodyText\">Seasons: {data.number_of_seasons}</p>\n                        <p className=\"bodyText\">Episodes: {data.number_of_episodes}</p>\n\n                        <div className=\"iconWithText\">\n                            <FontAwesomeIcon icon=\"angle-double-right\" size=\"2x\" className=\"angleRight\"/>\n                            <p className=\"subTitle\">Synopsis</p>\n                        </div>\n                        <p className=\"synopsis\">{data.overview}</p>\n\n                        {loggedIn ? (\n                            <div>\n                                <button className={watchedOption} onClick={e => {e.preventDefault(); addWatched();}}>Add to Watched</button>\n                                <button className={watchlaterOption} onClick={e => {e.preventDefault(); addWatchlater();}}>Add to Watch Later</button>\n                            </div>\n                        ): (\n                            <p className=\"instr\">Log in to add shows to watch/watch later</p>\n                        )}\n                    </div>\n                    \n                    {data.backdrop_path && (\n                        <div className=\"backdrop\" style={{backgroundImage: `url(${\"https://image.tmdb.org/t/p/original\" + data.backdrop_path})`}}></div>\n                    )}\n                </div>\n\n                <div className=\"detailLower\">\n                    <div className=\"iconWithText\">\n                        <FontAwesomeIcon icon=\"angle-double-right\" size=\"2x\" className=\"angleRight orange\"/>\n                        <p className=\"subTitle\">Recommendations</p>\n                    </div>\n\n                    <div className=\"scroll\">\n                        <div className=\"recommendations\">\n                            {recs.length !== 0 && recs.map(x => {return <TvShow key={x.id} result={x} reco={true} userID={localStorage.getItem('userID')} />})}\n                        </div>\n\n                        {noRecs && (\n                            <div className=\"iconWithText\">\n                                <p className=\"message\">No Recommendations</p>\n                                <FontAwesomeIcon icon=\"sad-tear\" size=\"2x\" className=\"orange\"/>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )}\n        </div>\n    );\n}\n\nexport default Detail;","import React, { useState, useEffect } from \"react\";\nimport TvShow from \"./TvShow\";\nimport '../styles/Search.css'\nconst axios = require('axios').default;\n\nfunction Search() {\n\n    const apiKey = \"2c3c49c8f9892c1b17ebf32c4b74bed0\";\n    const [allShows, setAllShows] = useState([]);\n    const [filteredShows, setFilteredShows] = useState([]);\n\n    const getAllDramas = () => {\n        // API request to get the total pages\n        axios.get(\"https://api.themoviedb.org/3/discover/tv?api_key=\" + apiKey + \"&language=en-US&sort_by=popularity.desc&page=\" + 1 + \n        \"&with_genres=18&include_null_first_air_dates=false&with_original_language=ko&with_watch_monetization_types=flatrate\")\n        .then((res) => {\n            let array = [];\n            // Store each show from every page\n            for (let i = 1; i <= res.data.total_pages; i++) {\n                axios.get(\"https://api.themoviedb.org/3/discover/tv?api_key=\" + apiKey + \"&language=en-US&sort_by=popularity.desc&page=\" + i + \n                \"&with_genres=18&include_null_first_air_dates=false&with_original_language=ko&with_watch_monetization_types=flatrate\")\n                .then((res) => {\n                    res.data.results.map(x=>{\n                        array.push(x);\n                    });\n                });\n            }\n            setAllShows(array);\n        });\n    }\n\n    useEffect(() => {\n        getAllDramas();\n    }, []);\n\n    // Search show by filterering while ignoring capital letters, spaces, and hyphens\n    const search = (input) => {\n        setFilteredShows(allShows.filter(x=>{\n            return (x.name.toLowerCase().replace(/-|\\s/g,\"\").includes(input.toLowerCase().replace(/-|\\s/g,\"\")) && x.poster_path !== null) ||\n            (x.original_name.toLowerCase().replace(/-|\\s/g,\"\").includes(input.toLowerCase().replace(/-|\\s/g,\"\")) && x.poster_path !== null);\n        }).slice(0, 40));\n    }\n\n\n    return (\n        <div className=\"searchPage\">\n            <input className=\"searchInput\" placeholder=\"start typing\" onChange={e => {e.preventDefault(); search(e.target.value);}}></input>\n\n            <div className=\"tvShows\">\n                {filteredShows.length !== 0 && filteredShows.map(x => {return <TvShow key={x.id} result={x} />})}\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; \nimport \"./Icons.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../styles/DramaCard.css'\nconst axios = require('axios').default;\n\nfunction DramaCard(props) {\n\n    const history = useHistory();\n    const {data, dramaID, fromWatched} = props;\n    const [isRemove, setIsRemove] = useState(true);\n\n    // remove show from database either from watched or watch later\n    const remove = (dramaID) => {\n        if (fromWatched) {\n            axios.post('https://mykdrama.herokuapp.com/deleteWatched', {\n                watchedID: dramaID\n            }).then(() => {\n                setIsRemove(false);\n            });\n        } else {\n            axios.post('https://mykdrama.herokuapp.com/deleteWatchlater', {\n                watchlaterID: dramaID\n            }).then(() => {\n                setIsRemove(false);\n            });\n        }\n    }\n\n\n    return (\n        <div className=\"dramaCard\">\n            {isRemove && (\n                <div key={data.showID}>\n                    \n                    <img className=\"cardPic\" \n                        onClick={() => {\n                            localStorage.setItem('showID', data.showID);\n                            history.push('/detail/' + data.name.replace(/\\s/g, ''))\n                        }}\n                        src={\"https://image.tmdb.org/t/p/w400\" + data.poster} alt={data.name}>\n                    </img>\n                    \n                    <div className=\"onTop\">\n                        <div className=\"circle\">\n                            <FontAwesomeIcon icon=\"trash-alt\" size=\"2x\" className=\"trashIcon\" onClick={e => {e.preventDefault(); remove(dramaID);}} />\n                        </div>\n                    </div>\n                    \n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default DramaCard;","import React, { useState, useEffect } from \"react\";\nimport '../styles/MyKdrama.css'\nimport \"./Icons.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DramaCard from \"./DramaCard\";\nconst axios = require('axios').default;\n\nfunction MyKdrama(props) {\n\n    const [watchedDramas, setWatchedDramas] = useState([]); \n    const [laterDramas, setLaterDramas] = useState([]); \n\n    // get dramas from database\n    const getWatched = () => {\n        axios.post('https://mykdrama.herokuapp.com/getWatched', {\n            userID: localStorage.getItem('userID')\n        }).then((res) => {\n            setWatchedDramas(res.data);\n        });\n    }\n\n    const getWatchlater = () => {\n        axios.post('https://mykdrama.herokuapp.com/getWatchlater', {\n            userID: localStorage.getItem('userID')\n        }).then((res) => {\n            setLaterDramas(res.data);\n        });\n    }\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        if (localStorage.getItem('userID') && localStorage.getItem('userID') !== \"0\") {\n            getWatched();\n            getWatchlater();\n        }\n    }, [props.location]);\n\n    \n    return (\n        <div className=\"myKdramaPage\">\n            <div className=\"arrowTitle\">\n                <FontAwesomeIcon icon=\"angle-double-right\" size=\"2x\" className=\"purpleAngleRight\"/>\n                <p className=\"watchTitle\">Watched</p>\n            </div>\n            <div className=\"horzScroll\">\n                <div className=\"myDramas\">\n                    {watchedDramas.length !== 0 && watchedDramas.map(x=>{return <DramaCard key={x.showID} data={x} dramaID={x.watchedID} fromWatched={true} />})}\n                </div>\n            </div>\n\n            <div className=\"arrowTitle\">\n                <FontAwesomeIcon icon=\"angle-double-right\" size=\"2x\" className=\"blueAngleRight\"/>\n                <p className=\"watchTitle\">Watch Later</p>\n            </div>\n            <div className=\"horzScroll\">\n                <div className=\"myDramas\">\n                    {laterDramas.length !== 0 && laterDramas.map(x=>{return <DramaCard key={x.showID} data={x} dramaID={x.watchlaterID} fromWatched={false} />})}\n                </div>\n            </div>\n\n            {watchedDramas.length === 0 && laterDramas.length === 0 && (\n                <div className=\"emptyMessage\">\n                    <p>So far empty :(</p> \n                    <p>Go look for some K-dramas!</p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default MyKdrama;","import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport Detail from './components/Detail';\nimport Search from './components/Search';\nimport MyKdrama from './components/MyKdrama';\nconst axios = require('axios').default;\n\nfunction App() {\n\n    // this is used to take the user to a loading page while server is \"asleep\"\n    const [sleep, setSleep] = useState(true);\n\n    useEffect(() => {\n        // call to server to wake up heroku hosting\n        axios.get('https://mykdrama.herokuapp.com/').then(() => {\n            setSleep(false);\n        });\n    }, []);\n\n\n    return (\n        <div>     \n            {sleep ? (\n                <div className=\"sleepCover\">\n                    <div className=\"sleepScreen\">\n                        <div className=\"col-3\">\n                            <div className=\"snippet\" data-title=\".dot-spin\">\n                                <div className=\"stage\">\n                                    <div className=\"dot-spin\"></div>\n                                </div>\n                            </div>\n                        </div>\n                        <p>Connecting to server</p>\n                        <p>Please wait a few seconds</p>\n                        <p>Backend hosted on Heroku</p>\n                    </div>\n                </div>\n            ) : (\n                <Router>\n                    <Header />\n\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/home\" component={Home} />\n                        <Route path={\"/detail/:name\"} component={Detail} />\n                        <Route exact path={\"/search\"} component={Search} />\n                        <Route exact path={\"/myKdrama\"} component={MyKdrama} />\n                    </Switch>\n\n                    <Footer />\n                </Router>\n            )}\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}